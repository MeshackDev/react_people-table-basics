{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","sex","born","died","motherName","fatherName","personExists","personName","find","pers","name","pathname","useLocation","classNames","slug","to","PeoplePage","useState","setPeople","isloading","setIsLoading","hasLoadingError","setHasLoadigError","useEffect","loadUsers","peopleFromServer","length","map","App","activeLink","isActive","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a0827436.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const personExists = (personName: string | null) => {\n    return people.find(pers => pers.name === personName) || null;\n  };\n\n  const { pathname } = useLocation();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        'has-background-warning': `/people/${person.slug}` === pathname,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      { personExists(motherName) ? (\n        <td>\n          <Link\n            to={`/people/${personExists(motherName)?.slug}`}\n            className={classNames({\n              'has-text-danger': personExists(motherName)?.sex === 'f',\n            })}\n          >\n            {motherName || '-'}\n          </Link>\n        </td>\n      ) : (\n        <td>{motherName || '-'}</td>\n      )}\n      { personExists(fatherName) ? (\n        <td>\n          <Link to={`/people/${personExists(fatherName)?.slug}`}>\n            {fatherName || '-'}\n          </Link>\n        </td>\n      ) : (\n        <td>{fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadigError] = useState(false);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      setHasLoadigError(false);\n      setIsLoading(true);\n\n      try {\n        const peopleFromServer = await getPeople();\n\n        setIsLoading(false);\n        setPeople(peopleFromServer);\n      } catch (error) {\n        setIsLoading(false);\n        setHasLoadigError(true);\n      }\n    };\n\n    loadUsers();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isloading && <Loader />}\n\n          {hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && !isloading && !hasLoadingError) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              // eslint-disable-next-line max-len\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    person={person}\n                    people={people}\n                    key={person.slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Routes,\n  Route,\n  Navigate,\n  NavLink,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const activeLink = ({ isActive }: { isActive: boolean }) => {\n    return classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    );\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={activeLink}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={activeLink}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n            <Route\n              path=\"/people/*\"\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"/home\"\n              element={<Navigate replace to=\"/\" />}\n            />\n            <Route\n              path=\"/*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}